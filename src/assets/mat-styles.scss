// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ui-elements-primary: mat.define-palette(mat.$teal-palette, A400);
$ui-elements-accent: mat.define-palette(mat.$purple-palette, 700, A200, A700);

// The warn palette is optional (defaults to red).
$ui-elements-warn: mat.define-palette(mat.$red-palette, 700);


$ui-typography: mat.define-typography-config(
  $font-family: 'Rubik, sans-serif',
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$ui-elements-theme: mat.define-dark-theme((
  color: (
    primary: $ui-elements-primary,
    accent: $ui-elements-accent,
    warn: $ui-elements-warn,
  ),
  typography:  mat.define-typography-config(),
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
.dark-theme {
  @include mat.all-component-themes($ui-elements-theme);
  --mat-app-background-color: #161b19;
  --mdc-elevated-card-container-color: #1e2423;
}



